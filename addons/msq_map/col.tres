[gd_resource type="VisualShader" load_steps=7 format=3 uid="uid://q33j5184ktom"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_axrpn"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 1

[sub_resource type="VisualShaderNodeClamp" id="VisualShaderNodeClamp_36h1p"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0), 2, Quaternion(1, 1, 1, 1)]
op_type = 5

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_wmbks"]
input_name = "color"

[sub_resource type="VisualShaderNodeVec4Constant" id="VisualShaderNodeVec4Constant_prq8f"]
constant = Quaternion(0.3, 0.3, 0.3, 1)

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_76u31"]
input_name = "color"

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_mu05o"]
default_input_values = [0, 0.0, 1, 0.0, 2, 1e-05, 3, Vector3(-1.7, -1.7, -1.7), 4, Vector3(0, 0, 0), 5, Vector3(0, 0, 0)]

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;




void vertex() {
// Input:2
	vec4 n_out2p0 = COLOR;


	vec3 n_out3p0;
// If:3
	float n_in3p1 = 0.00000;
	float n_in3p2 = 0.00001;
	vec3 n_in3p3 = vec3(-1.70000, -1.70000, -1.70000);
	if(abs(n_out2p0.x - n_in3p1) < n_in3p2)
	{
		n_out3p0 = n_in3p3;
	}
	else if(n_out2p0.x < n_in3p1)
	{
		n_out3p0 = vec3(n_out2p0.xyz);
	}
	else
	{
		n_out3p0 = vec3(n_out2p0.xyz);
	}


// Output:0
	COLOR.rgb = n_out3p0;


}

void fragment() {
// Input:2
	vec4 n_out2p0 = COLOR;


// Vector4Constant:5
	vec4 n_out5p0 = vec4(0.300000, 0.300000, 0.300000, 1.000000);


// VectorOp:13
	vec4 n_out13p0 = n_out2p0 - n_out5p0;


// Clamp:15
	vec4 n_in15p1 = vec4(0.00000, 0.00000, 0.00000, 0.00000);
	vec4 n_in15p2 = vec4(1.00000, 1.00000, 1.00000, 1.00000);
	vec4 n_out15p0 = clamp(n_out13p0, n_in15p1, n_in15p2);


// Output:0
	ALBEDO = vec3(n_out15p0.xyz);


}
"
graph_offset = Vector2(-794.967, -131.116)
nodes/vertex/2/node = SubResource("VisualShaderNodeInput_76u31")
nodes/vertex/2/position = Vector2(-320, 220)
nodes/vertex/3/node = SubResource("VisualShaderNodeIf_mu05o")
nodes/vertex/3/position = Vector2(40, 140)
nodes/vertex/connections = PackedInt32Array(2, 0, 3, 0, 2, 0, 3, 4, 2, 0, 3, 5, 3, 0, 0, 6)
nodes/fragment/0/position = Vector2(320, 120)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_wmbks")
nodes/fragment/2/position = Vector2(-560, 260)
nodes/fragment/5/node = SubResource("VisualShaderNodeVec4Constant_prq8f")
nodes/fragment/5/position = Vector2(-660, 340)
nodes/fragment/13/node = SubResource("VisualShaderNodeVectorOp_axrpn")
nodes/fragment/13/position = Vector2(-200, 200)
nodes/fragment/15/node = SubResource("VisualShaderNodeClamp_36h1p")
nodes/fragment/15/position = Vector2(60, 140)
nodes/fragment/connections = PackedInt32Array(2, 0, 13, 0, 5, 0, 13, 1, 13, 0, 15, 0, 15, 0, 0, 0)
